// <auto-generated />
using System;
using Kanini_Toursim.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Kanini_Toursim.Migrations
{
    [DbContext(typeof(KaniniTourismDbContext))]
    [Migration("20230807114040_Loj")]
    partial class Loj
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Kanini_Toursim.Model.AdminImageGallery", b =>
                {
                    b.Property<int>("AdminImgsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdminImgsId"));

                    b.Property<string>("ImageFile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocationDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId1")
                        .HasColumnType("int");

                    b.HasKey("AdminImgsId");

                    b.HasIndex("UserId1");

                    b.ToTable("AdminImageGalleries");
                });

            modelBuilder.Entity("Kanini_Toursim.Model.Agent", b =>
                {
                    b.Property<int>("AgentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AgentId"));

                    b.Property<string>("AgencyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDproof")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AgentId");

                    b.ToTable("Agents");
                });

            modelBuilder.Entity("Kanini_Toursim.Model.BillingDetails", b =>
                {
                    b.Property<int>("BillingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BillingId"));

                    b.Property<decimal>("BillingAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("BillingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BillingStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BookingId")
                        .HasColumnType("int");

                    b.Property<int?>("PackageID")
                        .HasColumnType("int");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BillingId");

                    b.HasIndex("BookingId");

                    b.HasIndex("PackageID");

                    b.ToTable("BillingDetails");
                });

            modelBuilder.Entity("Kanini_Toursim.Model.Booking", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingId"));

                    b.Property<DateTime?>("DateOfTravel")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("NumberOfPeople")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("PackageID")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalCost")
                        .IsRequired()
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("UserId1")
                        .HasColumnType("int");

                    b.HasKey("BookingId");

                    b.HasIndex("PackageID");

                    b.HasIndex("UserId1");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("Kanini_Toursim.Model.Feedback", b =>
                {
                    b.Property<int>("FeedBackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FeedBackId"));

                    b.Property<string>("Comments")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("FeedbackDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("Rating")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("UserId1")
                        .HasColumnType("int");

                    b.HasKey("FeedBackId");

                    b.HasIndex("UserId1");

                    b.ToTable("Feedback");
                });

            modelBuilder.Entity("Kanini_Toursim.Model.Package", b =>
                {
                    b.Property<int?>("PackageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("PackageID"));

                    b.Property<string>("ActivitiesImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActivitiesName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Admin_UserUserId")
                        .HasColumnType("int");

                    b.Property<string>("BedType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Days")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Duration")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Facilities")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FoodType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FromDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("HotelImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HotelName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HotelPlace")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Itinerary")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItineraryDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Nights")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("OfferingType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PricePerPerson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ToDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("Totaldays")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("VehicleType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PackageID");

                    b.HasIndex("Admin_UserUserId");

                    b.ToTable("Packages");
                });

            modelBuilder.Entity("Travel.Models.Admin_User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Id_Proof")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("AdminUsers");
                });

            modelBuilder.Entity("Kanini_Toursim.Model.AdminImageGallery", b =>
                {
                    b.HasOne("Travel.Models.Admin_User", "UserId")
                        .WithMany("ImageGallaries")
                        .HasForeignKey("UserId1");

                    b.Navigation("UserId");
                });

            modelBuilder.Entity("Kanini_Toursim.Model.BillingDetails", b =>
                {
                    b.HasOne("Kanini_Toursim.Model.Booking", "Booking")
                        .WithMany()
                        .HasForeignKey("BookingId");

                    b.HasOne("Kanini_Toursim.Model.Package", "PackageId")
                        .WithMany()
                        .HasForeignKey("PackageID");

                    b.Navigation("Booking");

                    b.Navigation("PackageId");
                });

            modelBuilder.Entity("Kanini_Toursim.Model.Booking", b =>
                {
                    b.HasOne("Kanini_Toursim.Model.Package", "PackageId")
                        .WithMany()
                        .HasForeignKey("PackageID");

                    b.HasOne("Travel.Models.Admin_User", "UserId")
                        .WithMany("BookingTrips")
                        .HasForeignKey("UserId1");

                    b.Navigation("PackageId");

                    b.Navigation("UserId");
                });

            modelBuilder.Entity("Kanini_Toursim.Model.Feedback", b =>
                {
                    b.HasOne("Travel.Models.Admin_User", "UserId")
                        .WithMany("Feedbacks")
                        .HasForeignKey("UserId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserId");
                });

            modelBuilder.Entity("Kanini_Toursim.Model.Package", b =>
                {
                    b.HasOne("Travel.Models.Admin_User", null)
                        .WithMany("Packages")
                        .HasForeignKey("Admin_UserUserId");
                });

            modelBuilder.Entity("Travel.Models.Admin_User", b =>
                {
                    b.Navigation("BookingTrips");

                    b.Navigation("Feedbacks");

                    b.Navigation("ImageGallaries");

                    b.Navigation("Packages");
                });
#pragma warning restore 612, 618
        }
    }
}
